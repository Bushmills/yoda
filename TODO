--- todos solving problems, shortcomings, quirks
- ticking a word with headers in more than one context vocabulary allows
  no control nor test over which version was ticked.
- add context vocabularies to selected searches (only undoc remaining)

--- general todos, improvements, fancyness
- let yoda choose editor or xeditor according the environment it runs in.
- input line history would be nice
- string operations based on search and match are mostly absent.
  index / index$ might cover a lot already. cut$ was added
- left$, right$ with negative index didn't survive recent changes towards
  making yoda more unsigned-capable. Those may be desired.
- hide header of currently compiled word until compilation completed.
  can be done by classical hide/reveal,  by postponing header creation,
  or by moving when compilation has completed.
  postponing is probably the way to go: delegate to detokeniser.

--- optimiser todos:
- describe microinstructions effects to optimiser, using atom list
- have optimiser determine optimisable code sequences (linear code)
- run optimisable sequences with indicator data through arguments tracer.
- replace micro operations sequence to directly reflect tracer results.
- merge sequences of micro instructions to macro instructions.

--- common suspects
- documentation, tests      these are progressing nicely
