yoda relies on these external program for execution of few words:

      realpath    # used in yoda for finding the directory where yoda resides,
                  # and to create unique paths for list of files even when
                  # path specification differs (relative vs. absolute, symlinks etc)

      grep        # used with dependency based resolving, to build dependency
                  # file by scanning libraries for lines containing "^provides: "
                  # New dependency added:  is


No test for their presence is performed, as those are considered pretty standard
on any system able to run bash.

Optionally, a supported editor is used.
Related to viewing and editing documentation files:

      edit
      doc
      undoc

Opening and viewing source of words:

      fix
      review

"Support" means, an editor which can, after opening
the file, move the cursor to a position as specified on command line.
Ideally to column and row, but just to row is ok too.
For two handfuls of editors, supporting code has been added, and can be
found in the file libs/fix. Using those definitions it shouldn't be
too hard to add support for other editors not listed there.
The editors for which support has been preconfigured are:

      nano
      mcedit
      jupp
      joe
      vi
      emacs
      featherpad
      mousepad
      efte
      gedit

      less
      most
in addition are "less" and "most" now supported, but only for viewing,
not for editing. Those are an alternative to an editor if mostly
jumping to specific lines for viewing is wanted.

Any of those can be specified in yoda.conf configuration file.

screen libraries for controlling cursor and attributes rely on
presence of tput, as does screen attributes change of error messages.
