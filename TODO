--- todos solving problems, shortcomings, quirks
- review opens wrong file with those few variables and constants defined
  in yoda (base, dp, msb, maxint...). As yoda doesn't even show in files
  listing, review finds it of course hard to choose it. Still, it's a
  quirk which needs to be addressed.
- ticking a word with headers in more than one context vocabulary allows
  no control nor test over which version was ticked.
- better support for unsigned
- add context vocabularies to selected searches (only undoc remaining)

--- general todos, improvements, fancyness
- while "review" is functional, its implementation is a bit messy,
  specifically the way primitives store their location information.
- a "needed" for testing a list of words rather than just a single word
- string operations based on search and match are mostly absent.
  index / index$ might cover a lot already. cut$ was added
- allow customising query attributes
- allow customising prompt
- hide header of currently compiled word until compilation completed.
  can be done by classical hide/reveal,  by postponing header creation,
  or by moving when compilation has completed.
  postponing is probably the way to go: delegate to detokeniser.
- consider to let a satisfied u: turn forwardrefs on, and ; return to old state

--- optimiser todos:
- describe microinstructions effects to optimiser, using atom list
- have optimiser determine optimisable code sequences (linear code)
- run optimisable sequences with indicator data through arguments tracer.
- replace micro operations sequence to directly reflect tracer results.
- merge sequences of micro instructions to macro instructions.

--- common suspects
- documentation, tests
