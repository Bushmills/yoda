loaded lest done   ( reload protect )

>declare -a strings=();                   \ an array for strings
create stringvariables  0 ,               \ index into string array

\ store top of string stack in strings array item u,
\ then discard top string stack item
: $!  ( u -- )  ( $1 -- )
   >strings[s[sp--]]="${ss[-1]}"
   >unset "ss[-1]"
;

\ push string array item u to string stack
: $@ ( u -- ) ( -- $1 )
   >ss+=("${strings[s[sp--]]}")
;  inline

: $variable                               \ a string variable is just like
   stringvariables                        \ a constant producing the index into
   dup @ constant                         \ strings array it was defined with,
   inc                                    \ and increments that index.
;

: $constant
   create               ( $1 -- )
      stringvariables
      dup @
      dup , $!
      inc
   does> @ $@  ;        ( -- $1 )

done                                      \ end compilation. only comments follow

\ --- example of use ---
$variable foo$                            \ define two string variables
$variable bar$

"first string"   foo$  $!                 \ write arbitrary strings to them
"second string"  bar$  $!

foo$ $@ type$ cr                          \ read and output string variables contents
bar$ $@ type$ cr

"foo" $constant foo$
foo$ type$
