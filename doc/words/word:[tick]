name:                '
stack:               ( -- xt )
return stack:        ( -- )
string stack:        ( -- )
category:            dictionary, wordlists
input stream:        parses a space delimited string as word name, which is looked up

description:         returns the so called execution token of the next word which name
                     is taken from input stream. The execution token is a single cell
                     sized integer which identifies the word, and can be used to execute
                     it (see "execute")

contexts:            stateless

example:             ' cr  dup  ' u.
                     execute execute

notes:               execution tokens can be stored or passed as arguments, allowing
                     "anonymous" referencing of words (in the sense of seperating names
                     and semantics)

                     note also that in the compilation context will ' still read
                     a string from input line, *not* the next word in the source file.
                     For this, look at ['] instead.
