
( string: $1 -- )  ( -- f )
: used       "editor" env$ $= ;

\ "error" places filename, error line and error column in lasterror[0], [1] and [2].
\ error line and columns can be passed to editor for moving cursor to error location.
\ but as editor invocation lines differs, here's a selection of two handfuls:

"nano"       used lest >fixargs='+${lasterror[1]},${lasterror[2]}'
"mcedit"     used lest >fixargs='+${lasterror[1]}'
"jupp"       used lest >fixargs='+${lasterror[1]}'
"joe"        used lest >fixargs='+${lasterror[1]}'
"vi"         used lest >fixargs='+${lasterror[1]}'
"emacs"      used lest >fixargs='+${lasterror[1]}:${lasterror[2]}'
"featherpad" used lest >fixargs='+${lasterror[1]},$((${lasterror[2]}-1))'
"mousepad"   used lest >fixargs='-l ${lasterror[1]} -c $((${lasterror[2]}-1))'
"efte"       used lest >fixargs='-l${lasterror[1]},${lasterror[2]}'
"gedit"      used lest >fixargs='+${lasterror[1]}:${lasterror[2]}'
trash used   \ used is a too common word to waste it for this: discard header

\ in case error occured while not loading from file, number in lasterror[1] (the line number)
\ will be negative. Therefore will fix refuse to open a file when lasterror[1] is negative.

: fix       "lasterror[1]" env
            0< if >noerror
            else  >eval editor "$fixargs" "$lasterror"
            then  ;

\ not pretty but helpful
: review
   bl parse                            \ parse name of word to review
   "where[${ss[-2]}]" env$ nip$        \ line number and file word is in
   chop$ 2 = lest                      \ only valid if two args
      "lasterror[1]" >env$             \ store line number
      1 "lasterror[2]" >env            \ store column number (always 1)
      "${files[${ss[-3]}]}"            \ convert file number to file name
      "lasterror[0]" >env$             \ store file name
      drop$ fix ;                      \ call fix on review pretending to be an error
