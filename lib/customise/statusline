provides: statusline +l -l
needs: capitalise movecursor bold blue fg bg deol .s columns

create statusline   true ,
2 constant spacing

: +l   statusline on ;
: -l   statusline off
       0 0 movecursor deol         \ empty top line
       restorecursor ;

: show0           ( $1 -- )
        type$
        spacing spaces ;

: show1           ( x -- ) ( $1 -- )
        base @ >r
        decimal
        type$ ': emit 0 u.r
        spacing spaces
        r> base ! ;

: show$           ( $1 $2 -- )
        swap$ type$
        ': emit show0 ;

: status          ( c -- )  ( $1 -- $2 )
        if capitalise
        then append$ ;

: flags  ( -- $1 )
        "flags" ""
        'f  forwardrefs @     status
        'i  instantresolve @  status
        's  shell @           status  ;

: toolong ( columns width -- columns flag )
   spacing + -
   dup 0<  ;

: .dynamicstatus  ( u1 -- u2 )
      bold yellow fg  ( blue bg )  deol
      #9 toolong  unless                       flags       show$
      #8 toolong  unless             "unres"   #unresolved show1
      #7 toolong  unless             "base"    base @      show1
      #8 toolong  unless             "files"   #files      show1
      #9 toolong  unless             "here"    here        show1
      #9 toolong  unless             "rdepth"  rdepth      show1
      #7 toolong  unless             "bits"    bits        show1
     #18 toolong  unless  "yoda version " type$ "v" env$   show0
     #25 toolong  unless              "stack:" type$   >r .s r>
;

: .status         ( -- )
      columns
      .dynamicstatus
      drop  ;

trash status
trash flags
trash toolong
