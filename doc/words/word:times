name:                times
stack:               ( u -- )
return stack:        ( -- u2 )
string stack:        ( -- )
contexts:            interpreted, compiled
category:            flow control
input stream:        whole input line



context:             interpreted
description:         repeat execution of remainder of input line u times.
                     The count of remaining executions of input line can
                     be produced by execution of i.  In case of nested
                     execution of times can the count of remaining
                     executions of the next level of times be produced by
                     executing j. The temporarily stacked u2 on return
                     stack will be removed again after last execution of
                     times.

example:             3 times  cr  4 times   j . i .  space


context:             compiled
description:         repeat execution of remainder of word u times.
                     The count of remaining executions of input line can
                     be produced by execution of i.  In case of nested
                     execution of times can the count of remaining
                     executions of the next level of times be produced by
                     executing j. The temporarily stacked u2 on return
                     stack will be removed again after last execution of
                     times.

example:             : foo   3 times  cr  4 times   j . i .  space  ;
notes:               for the compiled version an experimental construct was
                     added to yoda, of which I'm at this point not sure
                     whether it will stay. Don't rely on presence of this
                     compiled version of times for all time to come.

standard:            no
deviation:           standard has no equivalent
