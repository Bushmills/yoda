loaded lest done
from stringvars

\ non compliant tput command builder:
\ according 200x does does>, when not used in conjunction with create,
\ yield an ambiguous condition.
\ tput employs the yoda specific response of using does> in conjunction
\ with a different defining word here:  constant.
\ result is merely slightly more efficient code for string retrieval.

: anothertput ( -- )
      stringvariables dup @
      dup constant $! inc ;

: tput0   ( $1 -- )
      anothertput does>    ( -- )
      >tput "${strings[s[sp--]]}"
;

: tput1   ( $1 -- )
      anothertput  does> ( x -- )
      >tput "${strings[s[sp--]]}" "${s[sp--]}"
;

: tput2   ( $1 -- )
      anothertput  does> ( x1 x2 -- )
      >tput "${strings[s[sp--]]}" "${s[sp--]}" "${s[sp--]}"
;

: screen  ( -- x y )                   \ return terminal window dimensions
      "COLUMNS" env
      "LINES" env  ;

\ ( -- )
"init"     tput0 terminit              \ (re-)initialize terminal
"longname" tput0 term                  \ print terminal name
"clear"    tput0 page                  \ wipe screen
"home"     tput0 home                  \ send cursor home
"smcup"    tput0 savescreen            \ save screen contents, then wipe screen
"rmcup"    tput0 restorescreen         \ restore previously save screen contents
"sc"       tput0 save-cursor           \ save cursor position
"rc"       tput0 restore-cursor        \ move cursor to previously saved cursor position
"el"       tput0 eol                   \ delete from cursor to end of line
"cuu1"     tput0 c-up                  \ move cursor up
"cud1"     tput0 c-down                \ move cursor down

"sgr0"     tput0 normal                \ undo attribute changes
"bold"     tput0 bold                  \ turn on bold
"smul"     tput0 <ul                   \ start underlining
"rmul"     tput0 ul>                   \ end underlining
"smso"     tput0 <so                   \ start "stand out" (reverse)
"rmso"     tput0 so>                   \ end "stand out"
"blink"    tput0 blink                 \ set blink attribute
"rev"      tput0 reverse               \ set reverse video attribute

\ ( u -- )
"setaf"    tput1 fg                    \ set text colour
"setab"    tput1 bg                    \ set background colour
"cuu"      tput1 c-ups                 \ move cursor up by u lines
"cud"      tput1 c-downs               \ move cursor down by u lines

\ ( u1 u2 -- )
"cup"      tput2 at                    \ move cursor to column u1 line u2

\ doesn't belong here, but currently only used in this place
: enum ( -- )  ( stream: names )
   0 parse$
   chop$ for 
     i "constant " swap$ join$
     evaluate$
   next ;

\ colours for using with fg and bg
enum black red green yellow blue magenta cyan white
